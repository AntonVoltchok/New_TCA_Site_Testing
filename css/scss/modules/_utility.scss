/*********************************************
	BASE FONT STYLES
*********************************************/

// BASE FONT SIZE REM CONVERSION
@function calculateRem($size) {
  $rem-size: $size / 16px;
  @return $rem-size * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

/* These handle massive type, for less frequently occuring bits of text (e.g. in mastheads and banners). */
.giga {
  @include font-size(80px);
  line-height: 1.2;  /* 96px */
}
.mega {
  @include font-size(64px);
  line-height: 1.125;  /* 72px */
}
.kilo {
  @include font-size(48px);
  line-height: 1;    /* 48px */
}

/* Define headings and their associated classes here. */
h1, .alpha {
  @include font-size(32px);
  line-height: 1.5;  /* 48px */
}
h2, .beta {
  @include font-size(24px);
  line-height: 1;    /* 24px */
}
h3, .gamma {
  @include font-size(20px);
  line-height: 1.2;  /* 24px */
}
h4, .delta {
  @include font-size(18px);
  line-height: 1.333;  /* 24px */
}
h5, .epsilon {
  @include font-size(16px);
  line-height: 1.5;  /* 24px */
}
h6, .zeta {
  @include font-size(16px);
  line-height: 1.5;  /* 24px */
}







/*********************************************
	MIXINS
*********************************************/

// MEDIA QUERIES

@mixin breakpoint($point) {
  @if $point == hires {
    @media only screen and (min-width: 1921px) and (max-width: 2565px) { @content; }
  }
  @else if $point == desktop {
    @media only screen and (min-width: 1601px) and (max-width: 1920px) { @content; }
  }  
  @else if $point == laptop {
    @media only screen and (min-width: 1281px) and (max-width: 1600px) { @content; }
  }
  @else if $point == netbook {
    @media only screen and (min-width: 1006px) and (max-width: 1280px) { @content; }
  } 	
  @else if $point == medium {
    @media only screen and (min-width: 756px) and (max-width: 1005px) { @content; }
  }	
  @else if $point == small {
    @media only screen and (min-width: 381px) and (max-width: 755px) { @content; }
  }
  @else if $point == newp {
    @media only screen and (min-width: 321px) and (max-width: 380px)  { @content; }
  }
  @else if $point == oldp {
    @media only screen and (max-width: 320px)  { @content; }
  }	
}



/*********************************************
	- 1.0 -  COLOURS
*********************************************/

	/* Find colour names - http://chir.ag/projects/name-that-color/ */
	
	$darkgrey: #484747;
	$darkblue: #1f4c73;
	
/*********************************************
	- 2.0 -  GRADIENTS
*********************************************/
	

/*********************************************
	- 3.0 -  TYPOGRAPHY
*********************************************/

	/* - 3.1. - FONT WEIGHTS
	------------------------------------------ */

	$weight-light: 100;
	$weight-regular: 400;
	$weight-bold: 600;
	
	$weight-header: $weight-bold;

	/* - 3.1. - BASE FONTS
	------------------------------------------ */
	$h1-font-fam: 'Oswald', sans-serif;
	$h2-font-fam: 'Roboto Condensed', sans-serif;

	
	
	/* - 3.2. - HEADER FONTS
	------------------------------------------ */
	
	$header-font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
	






























///////////////////////////////
/* RANDOM FUNCTIONS / MIXINS */
///////////////////////////////

// mixins - rem fallback - credits: http://zerosixthree.se/

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

// mixins - center vertically and/or horizontally an absolute positioned element

@mixin center($xy:xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include transform(translateX(-50%) translateY(-50%));
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    @include transform(translateX(-50%));
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    @include transform(translateY(-50%));
  }
}

